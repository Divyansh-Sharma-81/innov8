problem,tags,problem_statement,solution,input-output
https://codeforces.com/problemset/problem/1333/B,"greedy,implementation","Once again, Boris needs the help of Anton in creating a task. This time Anton needs to solve the following problem:\n\nThere are two arrays of integers $a$ and $b$ of length $n$. It turned out that array $a$ contains only elements from the set $\{-1, 0, 1\}$.\n\nAnton can perform the following sequence of operations any number of times:  Choose any pair of indexes $(i, j)$ such that $1 \le i < j \le n$. It is possible to choose the same pair $(i, j)$ more than once.   Add $a_i$ to $a_j$. In other words, $j$-th element of the array becomes equal to $a_i + a_j$. \n\nFor example, if you are given array $[1, -1, 0]$, you can transform it only to $[1, -1, -1]$, $[1, 0, 0]$ and $[1, -1, 1]$ by one operation.\n\nAnton wants to predict if it is possible to apply some number (zero or more) of these operations to the array $a$ so that it becomes equal to array $b$. Can you help him?\n\n\n-----Input-----\n\nEach test contains multiple test cases. \n\nThe first line contains the number of test cases $t$ ($1 \le t \le 10000$). The description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($1 \le n \le 10^5$)  — the length of arrays.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \dots, a_n$ ($-1 \le a_i \le 1$)  — elements of array $a$. There can be duplicates among elements.\n\nThe third line of each test case contains $n$ integers $b_1, b_2, \dots, b_n$ ($-10^9 \le b_i \le 10^9$)  — elements of array $b$. There can be duplicates among elements.\n\nIt is guaranteed that the sum of $n$ over all test cases doesn't exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, output one line containing ""YES"" if it's possible to make arrays $a$ and $b$ equal by performing the described operations, or ""NO"" if it's impossible.\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Example-----\nInput\n5\n3\n1 -1 0\n1 1 -2\n3\n0 1 1\n0 2 2\n2\n1 0\n1 41\n2\n-1 0\n-1 -41\n5\n0 1 -1 1 -1\n1 1 -1 1 -1\n\nOutput\nYES\nNO\nYES\nYES\nNO\n\n\n\n-----Note-----\n\nIn the first test-case we can choose $(i, j)=(2, 3)$ twice and after that choose $(i, j)=(1, 2)$ twice too. These operations will transform $[1, -1, 0] \to [1, -1, -2] \to [1, 1, -2]$\n\nIn the second test case we can't make equal numbers on the second position.\n\nIn the third test case we can choose $(i, j)=(1, 2)$ $41$ times. The same about the fourth test case.\n\nIn the last lest case, it is impossible to make array $a$ equal to the array $b$.","[""from math import *\n\nmod = 1000000007\n\nfor zz in range(int(input())):\n    n = int(input())\n    a = [ int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ha = True\n    hp = False\n    hm = False\n    for i in range(n):\n        if b[i] != a[i]:\n            if b[i] > a[i]:\n                if (hp):\n                    pass\n                else:\n                    ha = False\n                    break\n            else:\n                if (hm):\n                    pass\n                else:\n                    ha = False\n                    break\n        if a[i] > 0:\n            hp = True\n        elif a[i] < 0:\n            hm = True\n\n    if ha:\n        print('YES')\n    else:\n        print('NO')\n"", ""t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    d1 = False\n    d2 = False\n    ans = True\n    for j in range(n):\n        if a[j] > b[j]:\n            if not d1:\n                ans = False\n        if a[j] < b[j]:\n            if not d2:\n                ans = False\n        if a[j] == -1:\n            d1 = True\n        elif a[j] == 1:\n            d2 = True\n    if ans:\n        print(\""YES\"")\n    else:\n        print(\""NO\"")"", ""import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    pos = neg = False\n    ok = True\n    for i in range(n):\n        if a[i] > b[i] and not neg:\n            ok = False\n            break\n        if a[i] < b[i] and not pos:\n            ok = False\n            break\n        if a[i] == -1:\n            neg = True\n        if a[i] == 1:\n            pos = True\n    print('YES' if ok else 'NO')"", ""from math import *\n\n\n\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cnt1 = 0\n    cnt0 = 0\n    cntotr = 0\n    f = True\n    for i in range(n):\n        if a[i] > b[i]:\n            if cntotr == 0:\n                f = False\n                break\n        if a[i] < b[i]:\n            if cnt1 == 0:\n                f = False\n                break\n        if a[i] == 0:\n            cnt0 += 1\n        elif a[i] == 1:\n            cnt1 += 1\n        else:\n            cntotr += 1\n    if f:\n        print(\""YES\"")\n    else:\n        print(\""NO\"")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"", ""t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = map(int, input().split())\n    B = map(int, input().split())\n    \n    seen_pos = seen_neg = False\n    for a, b in zip(A, B):\n        if (b > a and not seen_pos) or (b < a and not seen_neg):\n            print('NO')\n            break\n        \n        if a > 0:\n            seen_pos = True\n        elif a < 0:\n            seen_neg = True        \n    else:\n        print('YES')"", ""import math\nfrom collections import defaultdict\nml=lambda:map(int,input().split())\nll=lambda:list(map(int,input().split()))\nii=lambda:int(input())\nip=lambda:input()\n\n\""\""\""========main code===============\""\""\""\n\nt=ii()\nfor _ in range(t):\n    x=ii()\n    a=ll()\n    b=ll()\n    one=-1\n    minus=-1\n    f=0\n    for i in range(x):\n        if(b[i]>a[i]):\n            if(one==-1):\n                f=1\n                break\n        elif (b[i]<a[i]):\n            if(minus==-1):\n                f=1\n                break\n        if(a[i]==1):\n            one=1\n        elif(a[i]==-1):\n            minus=1\n    if(f):\n        print(\""NO\"")\n    else:\n        print(\""YES\"")"", ""t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int, input().split()))\n    b=list(map(int, input().split()))\n    grow = shrink = False\n    for ai, bi in zip(a,b):\n        if bi < ai:\n            if not shrink:\n                print('NO')\n                break\n        elif bi > ai and not grow:\n            print('NO')\n            break\n        if ai == 1:\n            grow = True\n        elif ai == -1:\n            shrink = True\n    else:\n        print('YES')\n"", ""t = int(input())\nfor case_num in range(t):\n    n = int(input())\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    pos = False\n    neg = False\n    ok = True\n    for i in range(n):\n        if (not pos) and (not neg) and (a[i] != b[i]):\n            ok = False\n            break\n        if (not pos) and (a[i] < b[i]):\n            ok = False\n            break\n        if (not neg) and (a[i] > b[i]):\n            ok = False\n            break\n        if a[i] < 0:\n            neg = True\n        if a[i] > 0:\n            pos = True\n    print('YES' if ok else 'NO')\n"", ""import math\n\n\ndef main():\n    was = set()\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    for i in range(n):\n        if a[i] - b[i] > 0:\n            if not -1 in was:\n                print(\""NO\"")\n                return\n        elif a[i] - b[i] < 0:\n            if not 1 in was:\n                print(\""NO\"")\n                return\n        was.add(a[i])\n    print(\""YES\"")\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()"", ""from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\nfrom fractions import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 300010\nMOD = 10**9+7\nspf = [i for i in range(MAXN)]\nspf[0]=spf[1] = -1\ndef sieve():\n    for i in range(2,MAXN,2):\n        spf[i] = 2\n    for i in range(3,int(MAXN**0.5)+1):\n        if spf[i]==i:\n            for j in range(i*i,MAXN,i):\n                if spf[j]==j:\n                    spf[j]=i\ndef fib(n,m):\n    if n == 0:\n        return [0, 1]\n    else:\n        a, b = fib(n // 2)\n        c = ((a%m) * ((b%m) * 2 - (a%m)))%m\n        d = ((a%m) * (a%m))%m + ((b)%m * (b)%m)%m\n        if n % 2 == 0:\n            return [c, d]\n        else:\n            return [d, c + d]\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\ndef flush():\n    return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\ndef solve():\n    n = int(input())\n    a = arrIN()\n    b = arrIN()\n    x = [[0,0,0] for i in range(n)]\n    for i in range(n):\n        x[i][0] = int(a[i]==-1)\n        x[i][1] = int(a[i]==0)\n        x[i][2] = int(a[i]==1)\n        x[i][0]|=x[i-1][0]\n        x[i][1]|=x[i-1][1]\n        x[i][2]|=x[i-1][2]\n    if a[0]!=b[0]:\n        print('NO')\n    else:\n        for i in range(1,n):\n            if a[i]!=b[i]:\n                if a[i]>b[i]:\n                    if not x[i-1][0]:\n                        print('NO')\n                        break\n                else:\n                    if not x[i-1][2]:\n                        print('NO')\n                        break\n        else:\n            print('YES')\n\n\nt = int(input())\nfor i in range(t):\n    solve()\n\n""]","{\n  ""inputs"": [\n    ""5\n3\n1 -1 0\n1 1 -2\n3\n0 1 1\n0 2 2\n2\n1 0\n1 41\n2\n-1 0\n-1 -41\n5\n0 1 -1 1 -1\n1 1 -1 1 -1\n""\n  ],\n  ""outputs"": [\n    ""YES\nNO\nYES\nYES\nNO\n""\n  ]\n}"
https://codeforces.com/problemset/problem/1407/A,"constructive algorithms,math","Alexandra has an even-length array $a$, consisting of $0$s and $1$s. The elements of the array are enumerated from $1$ to $n$. She wants to remove at most $\frac{n}{2}$ elements (where $n$ — length of array) in the way that alternating sum of the array will be equal $0$ (i.e. $a_1 - a_2 + a_3 - a_4 + \dotsc = 0$). In other words, Alexandra wants sum of all elements at the odd positions and sum of all elements at the even positions to become equal. The elements that you remove don't have to be consecutive.\n\nFor example, if she has $a = [1, 0, 1, 0, 0, 0]$ and she removes $2$nd and $4$th elements, $a$ will become equal $[1, 1, 0, 0]$ and its alternating sum is $1 - 1 + 0 - 0 = 0$.\n\nHelp her!\n\n\n-----Input-----\n\nEach test contains multiple test cases. The first line contains the number of test cases $t$ ($1 \le t \le 10^3$). Description of the test cases follows.\n\nThe first line of each test case contains a single integer $n$ ($2 \le n \le 10^3$, $n$ is even)  — length of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \ldots, a_n$ ($0 \le a_i \le 1$)  — elements of the array.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^3$.\n\n\n-----Output-----\n\nFor each test case, firstly, print $k$ ($\frac{n}{2} \leq k \leq n$) — number of elements that will remain after removing in the order they appear in $a$. Then, print this $k$ numbers. Note that you should print the numbers themselves, not their indices.\n\nWe can show that an answer always exists. If there are several answers, you can output any of them. \n\n\n-----Example-----\nInput\n4\n2\n1 0\n2\n0 0\n4\n0 1 1 1\n4\n1 1 0 0\n\nOutput\n1\n0\n1\n0\n2\n1 1\n4\n1 1 0 0\n\n\n\n-----Note-----\n\nIn the first and second cases, alternating sum of the array, obviously, equals $0$.\n\nIn the third case, alternating sum of the array equals $1 - 1 = 0$.\n\nIn the fourth case, alternating sum already equals $1 - 1 + 0 - 0 = 0$, so we don't have to remove anything.","[""def solve():\n    n = int(input())\n    lst = list(map(int,input().split()))\n    if sum(lst) <= n // 2:\n        print(n//2)\n        print(\""0 \"" * (n // 2))\n    else:\n        print(n//2 + (n // 2) % 2)\n        print(\""1 \"" * (n//2 + (n // 2) % 2))\nfor i in range(int(input())):\n    solve()"", ""t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    o = 0\n    z = 0\n    for i in range(n):\n        if(l[i]): o+=1\n        else: z+=1\n    if(o>z):\n        o-=o%2\n        print(o)\n        for i in range(o):\n            print(1, end =\"" \"")\n    else:\n        print(z)\n        for i in range(z):\n            print(0, end=\"" \"")\n    print()"", ""#OM GANESHAY NAMH\n#GANPATI BAPPA MORYA\nimport math,queue,heapq \nimport sys \nsys.setrecursionlimit(10**6)\nfastinput=sys.stdin.readline\nfastout=sys.stdout.write\nt=int(fastinput()) \nwhile t:\n    t-=1\n    n=int(fastinput()) \n    a=list(map(int,fastinput().split()))  \n    c=a.count(1) \n    if c==0 or c==n:\n        print(n)\n        print(*a) \n    elif c<=n//2:\n        print(n-c)\n        print('0 '*(n-c)) \n    else:\n        if c%2==0:\n            print(c)\n            print('1 '*c) \n        else:\n            c-=1 \n            print(c) \n            print('1 '*c)"", ""t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    res = []\n    for i in range(n // 2):\n        if a[i * 2] == 1 and a[i * 2 + 1] == 1:\n            res.append(1)\n            res.append(1)\n        elif a[i * 2] == 0 and a[i * 2 + 1] == 0:\n            res.append(0)\n            res.append(0)\n        else:\n            res.append(0)\n    print(len(res))\n    print(*res)"", ""import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n\n    ZERO=A.count(0)\n    if ZERO>=n//2:\n        print(ZERO)\n        print(*[0]*ZERO)\n    else:\n        ONE=n-ZERO\n        print(ONE//2*2)\n        print(*[1]*(ONE//2*2))\n\n    \n"", ""for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    a = arr.count(0)\n    b = arr.count(1)\n\n    if b > n // 2:\n        print(b - b % 2)\n        print(*[1 for _ in range(b - b % 2)])\n    elif b == n // 2:\n        print(a)\n        print(*[0 for _ in range(a)])\n    else:\n        print(a - a % 2)\n        print(*[0 for _ in range(a - a % 2)])\n"", ""for i in ' '*(int(input())):\n    n=int(input())\n    L=list(map(int,input().split()))\n    s=sum(L)\n    if s*2>n:\n        if (n//2)%2:\n            print(n//2+1)\n            for i in ' '*(n//2+1):print(1,end=' ')\n        else:\n            print(n//2)\n            for i in ' '*(n//2):print(1,end=' ')\n    else:\n        print(n//2)\n        for i in ' '*(n//2):print(0,end=' ')\n    print()"", ""from math import log2, ceil\n\ndef readGenerator():\n    while True:\n        tokens = input().split(' ')\n        for t in tokens:\n            yield t\n\nreader = readGenerator()\n\ndef readWord():\n    return next(reader)\n\ndef readInt():\n    return int(next(reader))\n\ndef readFloat():\n    return float(next(reader))\n\ndef readLine():\n    return input()\n\ndef solve(a):\n    v0, v1 = 0, 0\n    for i in a:\n        if i == 0:\n            v0 += 1\n        else:\n            v1 += 1\n\n    if v1 > v0:\n        if v1 % 2 != 0:\n            v1 -= 1\n        print(v1)\n        return '1 ' * v1\n    print(v0)\n    return '0 ' * v0\n\n\ntests = readInt()\n\nfor i in range(tests):\n    n = readInt()\n    a = [readInt() for _ in range(n)]\n    print(solve(a))"", ""def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if a.count(0) >= n // 2:\n        print(n // 2)\n        print(' '.join('0' * (n // 2)))\n    else:\n        m = n // 2\n        if m % 2 == 1:\n            m += 1\n        print(m)\n        print(' '.join('1' * (m)))\nt = int(input())\nfor _ in range(t):\n    solve()"", ""t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tarr = [int(j) for j in input().split()]\n\n\to = arr.count(1)\n\tz = arr.count(0)\n\n\tif o > z:\n\t\tif (n-z)%2 == 1:\n\t\t\tprint(n-z-1)\n\t\t\tprint(*([1]*(n-z-1)))\n\t\telse:\n\t\t\tprint(n-z)\n\t\t\tprint(*([1]*(n-z)))\n\telse:\n\t\tprint(n-o)\n\t\tprint(*([0]*(n-o)))"", ""for _ in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    one = l.count(1)\n    zero = n-one\n    if zero>=n//2:\n        print(zero)\n        print(*[0]*zero)\n    else:\n        one -= one%2\n        print(one)\n        print(*[1]*one)"", ""\nfrom sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    n = int(stdin.readline())\n    a = list(map(int,stdin.readline().split()))\n\n    z = 0\n    o = 0\n    ans = []\n\n    for i in a:\n        if i == 0:\n            z += 1\n        else:\n            o += 1\n\n        if z == 2:\n            z = 0\n            o = 0\n            ans.append(0)\n            ans.append(0)\n\n        elif o == 2:\n            z = 0\n            o = 0\n            ans.append(1)\n            ans.append(1)\n\n    if z > 0:\n        ans.append(0)\n    \n    print(len(ans))\n    print(*ans)\n"", ""for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    if a.count(0)>=n//2:\n        print(n//2)\n        print(*[0]*(n//2))\n    else:\n        if (n//2)%2==0:\n            print(n//2)\n            print(*[1]*(n//2))\n        else:\n            print(n//2+1)\n            print(*[1]*(n//2+1))\n"", ""import sys\n\ndef input():\n\treturn sys.stdin.readline().rstrip()\n\ndef input_split():\n\treturn [int(i) for i in input().split()]\n\ntestCases = int(input())\nanswers = []\nfor _ in range(testCases):\n\t#take input\n\tn = int(input())\n\tarr = input_split()\n\n\ts = sum(arr)\n\n\tif s <= n//2:\n\t\tans = [0]*(n//2)\n\telse:\n\t\t#num of ones is greater than equal to n//2\n\t\tif n%4 == 0:\n\t\t\tans = [1]*(n//2)\n\t\telse:\n\t\t\tans = [1]*((n//2) + 1)\n\t\t# ans = [1]*()\n\n\tanswers.append(ans)\nfor ans in answers:\n\tprint(len(ans))\n\tprint(*ans, sep = ' ')\n""]","{\n  ""inputs"": [\n    ""4\n2\n1 0\n2\n0 0\n4\n0 1 1 1\n4\n1 1 0 0\n""\n  ],\n  ""outputs"": [\n    ""1\n0 \n2\n0 0 \n2\n1 1 \n2\n0 0 \n""\n  ]\n}"
https://codeforces.com/problemset/problem/1417/B,"greedy,math,sortings","RedDreamer has an array $a$ consisting of $n$ non-negative integers, and an unlucky integer $T$.\n\nLet's denote the misfortune of array $b$ having length $m$ as $f(b)$ — the number of pairs of integers $(i, j)$ such that $1 \le i < j \le m$ and $b_i + b_j = T$. RedDreamer has to paint each element of $a$ into one of two colors, white and black (for each element, the color is chosen independently), and then create two arrays $c$ and $d$ so that all white elements belong to $c$, and all black elements belong to $d$ (it is possible that one of these two arrays becomes empty). RedDreamer wants to paint the elements in such a way that $f(c) + f(d)$ is minimum possible.\n\nFor example:\n\n  if $n = 6$, $T = 7$ and $a = [1, 2, 3, 4, 5, 6]$, it is possible to paint the $1$-st, the $4$-th and the $5$-th elements white, and all other elements black. So $c = [1, 4, 5]$, $d = [2, 3, 6]$, and $f(c) + f(d) = 0 + 0 = 0$;  if $n = 3$, $T = 6$ and $a = [3, 3, 3]$, it is possible to paint the $1$-st element white, and all other elements black. So $c = [3]$, $d = [3, 3]$, and $f(c) + f(d) = 0 + 1 = 1$. \n\nHelp RedDreamer to paint the array optimally!\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \le t \le 1000$) — the number of test cases. Then $t$ test cases follow.\n\nThe first line of each test case contains two integers $n$ and $T$ ($1 \le n \le 10^5$, $0 \le T \le 10^9$) — the number of elements in the array and the unlucky integer, respectively. \n\nThe second line contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($0 \le a_i \le 10^9$) — the elements of the array. \n\nThe sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print $n$ integers: $p_1$, $p_2$, ..., $p_n$ (each $p_i$ is either $0$ or $1$) denoting the colors. If $p_i$ is $0$, then $a_i$ is white and belongs to the array $c$, otherwise it is black and belongs to the array $d$.\n\nIf there are multiple answers that minimize the value of $f(c) + f(d)$, print any of them.\n\n\n-----Example-----\nInput\n2\n6 7\n1 2 3 4 5 6\n3 6\n3 3 3\n\nOutput\n1 0 0 1 1 0 \n1 0 0","[""T = int(input())\nfor test in range(T):\n    n,t = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    res = []\n    j=0\n    for i in a:\n        if(i*2<t):\n            res+=[\""0\""]\n        elif(i*2>t):\n            res+=[\""1\""]\n        else:\n            res.append([\""0\"",\""1\""][j])\n            j = 1-j\n    print(\"" \"".join(res))\n"", ""t = int(input())\nfor _ in range(t):\n    n, T = map(int, input().split())\n    a = list(map(int, input().split()))\n    white = set()\n    if not T%2 and T//2 in a:\n        halfcount = 0\n        for i in range(len(a)):\n            if a[i] == T//2:\n                if halfcount % 2:\n                    a[i] = 1\n                else:\n                    a[i] = 0\n                halfcount += 1\n            else:\n                if T-a[i] in white:\n                    a[i] = 1\n                else:\n                    white.add(a[i])\n                    a[i] = 0\n    else:\n        for i in range(len(a)):\n            if T-a[i] in white:\n                a[i] = 1\n            else:\n                white.add(a[i])\n                a[i] = 0\n    print(*a)"", ""import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n    n,k = MI()\n    a = LI()\n    d = [0]*n\n    c = a.count(k//2)\n    boo = k%2 == 0\n    count = 0\n    for i in range(n):\n        if a[i]<k//2:\n            d[i] = 0\n        elif a[i] == k//2:\n            if not boo:\n                d[i] = 0\n            elif count<c//2:\n                d[i] = 0\n                count+=1\n            else:\n                d[i] = 1\n        else:\n            d[i] = 1\n    print(*d)\n"", ""from collections import defaultdict\n\nT = int(input())\n\nfor t in range(T):\n    n, T = [int(_) for _ in input().split()]\n    A = [int(_) for _ in input().split()]\n\n    pen_in_c = defaultdict(int)\n    pen_in_d = defaultdict(int)\n\n    answer = []\n    for el in A:\n        if pen_in_d[el] < pen_in_c[el]:\n            answer.append(1)\n            pen_in_d[T - el] += 1\n        else:\n            answer.append(0)\n            pen_in_c[T - el] += 1\n\n    print(' '.join(map(str, answer)))\n"", ""t = int(input())\nfor _ in range(t):\n    n,T = map(int,input().split())\n    l1 = [int(x) for x in input().split()]\n    current = 0\n    for i in range(n):\n        if T%2==0 and l1[i]==T//2:\n            #print(\""HERE\"")\n            if current:\n                l1[i]=0\n                current = 0\n            else:\n                l1[i]=1\n                current = 1\n        else:\n            l1[i]=int(l1[i]>(T//2))\n    print(*l1)"", ""input=__import__('sys').stdin.readline\nfor _ in range(int(input())):\n\tn,T=map(int,input().split())\n\ts=list(map(int,input().split()))\n\tans=[0]*n\n\tg={} # last ind with sum x\n\tfor i in range(n):\n\t\tif T-s[i] in g:\n\t\t\tans[i]=1-ans[g[T-s[i]]]\n\t\tg[s[i]]=i\n\tprint(*ans)"", ""for _ in range(int(input())):\n    n, t = list(map(int, input().split()))\n    *arr, = list(map(int, input().split()))\n    flip = 0\n    for i in range(n):\n        if 2 * arr[i] > t:\n            arr[i] = 1\n        elif 2 * arr[i] < t:\n            arr[i] = 0\n        else:\n            arr[i] = flip\n            flip = 1 - flip\n    print(*arr)\n\n\n\n"", ""from collections import defaultdict\n\n\ndef solve():\n    n, T = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    white = defaultdict(int)\n    black = defaultdict(int)\n    ans = [0]*n\n    for i, x in enumerate(a):\n        if white[T-x] > black[T-x]:\n            black[x] += 1\n            ans[i] = 1\n        else:\n            white[x] += 1\n            ans[i] = 0\n    print(*ans)\n    return\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        solve()\n    return\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()"", ""t = int(input())\n\nfor case in range(t):\n    n, T = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    halfTticker = False\n    halfT = T / 2\n    white = set()\n\n    for x in a:\n        if x == halfT:\n            print(int(halfTticker), end=' ')\n            halfTticker = not halfTticker\n        elif x in white:\n            print(0, end=' ')\n        elif T - x in white:\n            print(1, end=' ')\n        else:\n            white.add(x)\n            print(0, end=' ')\n\n    print()\n\n"", ""import sys\nimport math\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,k = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    \n    alt = 0\n    ans = []\n    for i in range(len(arr)):\n        if k%2==1:\n            if arr[i] < k/2:\n                ans.append(0)\n            else:\n                ans.append(1)\n        else:\n            if arr[i] == k//2:\n                ans.append(alt%2)\n                alt += 1\n            elif arr[i] < k//2:\n                ans.append(0)\n            else:\n                ans.append(1)\n                \n    print(*ans)"", ""import math\nimport sys\n \nclass Read:\n    @staticmethod\n    def string():\n        return input()\n \n    @staticmethod\n    def int():\n        return int(input())\n \n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n \n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n \n\ndef solve():\n    n, T = Read.list_int()\n    a = Read.list_int()\n\n    tmp = {}\n    res = []\n    for i in a:\n        v = T - i\n        r = '1'\n        if v in tmp:\n            if tmp[v] == '1':\n                r = '0'\n        tmp[i] = r\n        res.append(r)\n\n    print(' '.join(res))\n    \n\n# query_count = 1\nquery_count = Read.int()\nwhile query_count:\n    query_count -= 1\n    solve()"", ""for _ in range(int(input())):\n    n, t = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n\n    ans = [-1] * n\n\n    if t % 2 == 0:\n        x = t // 2\n        c = arr.count(x)\n\n        c2 = 0\n        for i in range(n):\n            if arr[i] != x:\n                continue\n            if c2 < c // 2:\n                ans[i] = 0\n            else:\n                ans[i] = 1\n            c2 += 1\n\n    for i in range(n):\n        if ans[i] != -1:\n            continue\n        if arr[i] <= t // 2:\n            ans[i] = 0\n        else:\n            ans[i] = 1\n\n    print(*ans)\n"", ""t = int(input())\nfor _ in range(t):\n    n, u = map(int, input().split())\n    a = list(map(int, input().split()))\n    k=u//2\n    p = [-1 for i in range(n)]\n    if u%2!=0:\n        for i in range(n):\n            if a[i]<=k:\n                p[i]=0\n            else:\n                p[i]=1\n    else:\n        x=0\n        for i in range(n):\n            if a[i]<k:\n                p[i]=0\n            elif a[i]>k:\n                p[i]=1\n            elif a[i]==k:\n                if x==0:\n                    p[i]=0\n                    x=1\n                else:\n                    p[i]=1\n                    x=0\n    print(*p)"", ""import os\nfrom sys import stdin, stdout\n\nclass Input:\n    def __init__(self):\n        self.lines = stdin.readlines()\n        self.idx = 0\n    \n    def line(self):\n        try:\n            return self.lines[self.idx].strip()\n        finally:\n            self.idx += 1\n    \n    def array(self, sep = ' ', cast = int):\n        return list(map(cast, self.line().split(sep = sep)))\n    \n    def known_tests(self):\n        num_of_cases, = self.array()\n    \n        for case in range(num_of_cases):\n            yield self\n    \n    def unknown_tests(self):\n        while self.idx < len(self.lines):\n            yield self\n\ndef problem_solver():\n    '''\n    \n    '''\n    def solver(inpt):\n        n, T = inpt.array()\n        a = inpt.array()\n        b = []\n        c = 0\n\n        for x in a:\n            if x * 2 > T:\n                b.append(1)\n            elif x * 2 == T:\n                b.append(c & 1)\n                c += 1\n            else:\n                b.append(0)\n        \n        print(*b)\n\n    '''Returns solver'''\n    return solver\n\ntry:\n    solver = problem_solver()\n    for tc in Input().known_tests():\n        solver(tc)\nexcept Exception as e:\n    import traceback\n    traceback.print_exc(file=stdout)"", ""import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, t = map(int, input().split())\n    alst = list(map(int, input().split()))\n    lst = [[i, a] for i, a in enumerate(alst)]\n    lst.sort()\n    if t % 2 == 0:\n        mid = t // 2\n    else:\n        mid = t / 2\n    ans = [-1 for _ in range(n)]\n    flg = False\n    for i, a in lst:\n        if a < mid:\n            ans[i] = 0\n        elif a > mid:\n            ans[i] = 1\n        elif flg:\n            flg = False\n            ans[i] = 0\n        else:\n            flg = True\n            ans[i] = 1\n    print(*ans)\n    \nfor _ in range(int(input())):\n    main()"", ""import os\nimport sys\nimport io\n\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline # \u795e\u5947\u5feb\u8bfb\uff0c\u65e0\u6cd5\u8fd0\u884c\u8c03\u8bd5\nGANS = []\n\n# def print(*args): # \u795e\u5947\u5feb\u5199\uff0c\u6700\u540e\u5f97\u5199\u4e0aos.write\n#     nonlocal GANS\n#     for i in args:\n#         GANS.append(f'{i}'.encode())\n\n\nt = int(input())\n\nfor _ in range(t):\n    n,k = map(int,input().split())\n    li = [int(i) for i in input().split()]\n    d1 = {}\n    d2 = {}\n    col = []\n    for i in li:\n        if d1.get(k-i,0) > d2.get(k-i,0):\n            d2[i] = d2.get(i,0) + 1\n            col.append(1)\n        else:\n            d1[i] = d1.get(i,0) + 1\n            col.append(0)\n    print(*col)"", ""import math\nimport collections\nt=int(input())\nfor w in range(t):\n    n,k=(int(i) for i in input().split())\n    l=[int(i) for i in input().split()]\n    l1=[0]*n\n    c=0\n    for i in range(n):\n        if(l[i]>k/2):\n            l1[i]=1\n        elif(l[i]<k/2):\n            l1[i]=0\n        else:\n            if(c%2==0):\n                l1[i]=0\n                c+=1\n            else:\n                l1[i]=1\n                c+=1\n    print(*l1)"", ""for _ in range (int(input())):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    s=set()\n    c=0\n    b=[0]*n\n    for i in range (n):\n        if 2*a[i]==k:\n            b[i]=c\n            c=1-c\n        else:\n            if a[i] in s:\n                b[i]=1\n            else:\n                s.add(k-a[i])\n    print(*b)"", ""import random\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nfor _ in range(int(input())):\n    #n = int(input())\n    n,t= map(int, input().split())\n    a = list(map(int, input().split()))\n    d={}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]].append(i)\n        else:\n            d[a[i]]=[i]\n    ans=[-1]*n\n    for i in d.keys():\n        if ans[d[i][0]]==-1:\n            if i==t//2:\n                for j in range(len(d[i])//2):\n                    ans[d[i][j]]=0\n                for j in range(len(d[i])//2,len(d[i])):\n                    ans[d[i][j]] = 1\n            else:\n                for j in range(len(d[i])):\n                    ans[d[i][j]]=0\n                if t-i in d:\n                    for j in range(len(d[t-i])):\n                        ans[d[t-i][j]]=1\n    for i in ans:\n        print(i,end=' ')\n    print('')\n""]","{\n  ""inputs"": [\n    ""2\n6 7\n1 2 3 4 5 6\n3 6\n3 3 3\n""\n  ],\n  ""outputs"": [\n    ""0 0 0 1 1 1 \n1 0 1 \n""\n  ]\n}"
https://codeforces.com/problemset/problem/1263/A,math,"You have three piles of candies: red, green and blue candies:  the first pile contains only red candies and there are $r$ candies in it,  the second pile contains only green candies and there are $g$ candies in it,  the third pile contains only blue candies and there are $b$ candies in it. \n\nEach day Tanya eats exactly two candies of different colors. She is free to choose the colors of eaten candies: the only restriction that she can't eat two candies of the same color in a day.\n\nFind the maximal number of days Tanya can eat candies? Each day she needs to eat exactly two candies.\n\n\n-----Input-----\n\nThe first line contains integer $t$ ($1 \le t \le 1000$) — the number of test cases in the input. Then $t$ test cases follow.\n\nEach test case is given as a separate line of the input. It contains three integers $r$, $g$ and $b$ ($1 \le r, g, b \le 10^8$) — the number of red, green and blue candies, respectively.\n\n\n-----Output-----\n\nPrint $t$ integers: the $i$-th printed integer is the answer on the $i$-th test case in the input.\n\n\n-----Example-----\nInput\n6\n1 1 1\n1 2 1\n4 1 1\n7 4 10\n8 1 4\n8 2 8\n\nOutput\n1\n2\n2\n10\n5\n9\n\n\n\n-----Note-----\n\nIn the first example, Tanya can eat candies for one day only. She can eat any pair of candies this day because all of them have different colors.\n\nIn the second example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and green and blue candies on the second day.\n\nIn the third example, Tanya can eat candies for two days. For example, she can eat red and green candies on the first day, and red and blue candies on the second day. Note, that two red candies will remain uneaten.","[""n = int(input())\n\nfor _ in range(n):\n    a, b, c = list(map(int, input().split()))\n\n    print(min((a+b+c)//2, a+b, a+c, b+c))\n"", ""t = int(input())\nfor _ in range(t):\n    li = list(map(int, input().split()))\n    li = sorted(li)\n    if li[0] + li[1] <= li[2]:\n        print(li[0] + li[1])\n    else:\n        print(sum(li) // 2)"", ""for _ in range(int(input())):\n\tl = sorted(map(int, input().split()))\n\tprint(min(sum(l) // 2, l[0] + l[1]))"", ""for _ in range(int(input())):\n\tl=sorted(list(map(int,input().split())))\n\tprint(min(l[0]+l[1],sum(l)//2))"", ""t=int(input())\nfor _ in range(t):\n    a,b,c=list(map(int,input().split()))\n    a,b,c=sorted([a,b,c])\n    aa=a\n    bb=b\n    cc=c\n    d=c-b\n    c-=min(d,a)\n    a-=min(a,d)\n    b-=min(a//2,0)\n    a-=min(a//2,0)\n    c-=min(a,0)\n    a-=min(a,0)\n    b,c=sorted([b,c])\n    c-=b\n    b=0\n    print((aa+bb+cc-c)//2)\n"", ""import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor testcases in range(t):\n    r,g,b=sorted(map(int,input().split()))\n\n    if b>r+g:\n        print(r+g)\n    else:\n        print((r+g+b)//2)\n\n    \n"", ""t = int(input())\nfor i in range (t):\n    r, g, b = list(map(int,input().split()))\n    maxi = max(r, g, b)\n    total = r + g + b\n    if 2 * maxi > total:\n        print(total - maxi)\n    else:\n        print(total//2)"", ""q=int(input())\nfor i in range(q):\n    r=[int(x) for x in input().split()]\n    print(min(int(sum(r)/2),sum(r)-max(r)))"", ""T = int(input())\nfor t in range(T):\n    a, b, c = sorted(map(int, input().strip().split()))\n    d = c - b\n    v = a\n    if d > a:\n        v += min(c - a, b)\n    else:\n        a -= d\n        c -= d + a // 2\n        b -= a - a // 2\n        v += min(c, b)\n    print(v)\n"", ""for i in range(int(input())):\n\ta = sorted([int(i) for i in input().split()])\n\tprint(min(a[0]+a[1], sum(a)//2))"", ""\nt = int(input())\n\nfor _ in range(t):\n    r, g, b = sorted(map(int, input().split()))\n    s = sum([r, g, b])\n    print(min([r + g, s // 2]))\n"", ""def solve():\n    r,g,b = map(int, input().split())\n    a,b,c = sorted([r,g,b])\n    if a+b <= c:\n        ans = a+b\n    else:\n        ans = a+b+c\n        ans //= 2\n    print(ans)\n\nt = int(input())\nfor i in range(t):\n    solve()"", ""# https://codeforces.com/contest/1263/problem/A\n\nt = int(input())\nfor i in range(t):\n    rgb = list(map(int, input().split()))\n    rgb.sort()\n    ans = min(sum(rgb) // 2, sum(rgb[:2]))\n    print(ans)\n"", ""t=int(input())\nfor ij in range(0,t):\n\tl=list(map(int,input().split()))\n\tl=sorted(l)\n\tif l[2]>l[1]+l[0]:\n\t\tprint(l[1]+l[0])\n\telse:\n\t\tprint(sum(l)//2)"", ""a = int(input())\nfor i in range(a):\n    x, y, z = map(int, input().split())\n    x, y, z = sorted([x, y, z])\n    k = z - y\n    if k == 0:\n        y += x//2\n        print(y)\n    elif k > x:\n        y += x\n        print(y)\n    else:\n        x -= z - y\n        y = z\n        z += x//2\n        print(z)"", ""import sys\n\n# sys.stdin = open(\""in.txt\"")\nfor _ in range(int(input())):\n    a, b, c = sorted(list(map(int, input().split())))\n    print((a + b + c - max(0, c - (a + b))) // 2)\n    # res = min(a, b)\n    # a -= res\n    # b -= res\n    # res2 = min(b, c)\n    # b -= res2\n    # c -= res2\n    # res3 = min(a, c)\n    # a -= res3\n    # c -= res3\n    # print(res + res2 + res3)\n"", ""n = int(input())\nfor i in range(n):\n    a = sorted(list(map(int, input().split())))\n    if a[2] >= a[0]+a[1]:\n        print(a[0]+a[1])\n    else:\n        print(a[2]+(a[0]+a[1]-a[2])//2)"", ""sp = lambda: list(map(int, input().split()))\nsi = lambda: int(input())\n\nTESTCASES = int(input())\nfor tc in range(TESTCASES):\n    r,g,b=sorted(sp())\n    if b>r+g: b=r+g\n    print((r+g+b)//2)"", ""t = int(input())\nfor i in range(t):\n    r, g, b = list(map(int, input().split()))\n    if 2 * max(r, g, b) >= (r + g + b):\n        print(r + g + b - max(r, g, b))\n    else:\n        print((r + g + b) // 2)\n"", ""t=int(input())\nfor i in range(t):\n  r,g,b = map(int,input().split())\n  arr = [r,g,b]\n  arr.sort()\n  diff = arr[2]-arr[1]\n  arr[2] -= arr[0]\n  if arr[2] < arr[1]:\n    arr[2] = int((arr[1]+arr[2])/2)\n    arr[1] = arr[2]\n  print(arr[0]+min(arr[2],arr[1]))"", ""for _ in range(int(input())):\n    l =list( map( int, input().split()) )\n    l.sort()\n    s, m , b = l\n    a = s\n    c = min( s, b - m )\n    s -= c\n    b -= c\n    b -= s // 2\n    m -= s - s // 2\n    a += min( m, b )\n    print( a )\n\n"", ""n = int(input())\nwhile n != 0:\n    n -= 1\n    a = list(map(int, input().split()))\n    a.sort()\n    if a[0] + a[1] >= a[2]:\n        print(sum(a)//2)\n    else:\n        print(a[0] + a[1])"", ""import sys\n\n\n# inf = open('input.txt', 'r')\n# reader = (map(int, line.split()) for line in inf)\nreader = (list(map(int, s.split())) for s in sys.stdin)\n\ndef sweets(r, g, b):\n    total = g - r\n    g -= total\n    b -= total\n    if b > r + g:\n        total += r + g\n    else:\n        total += (r + b + g) // 2\n        \n    return total\n\nt, = next(reader)\nfor _ in range(t):\n    r, g, b = sorted(list(next(reader)))\n    ans = sweets(r, g, b)\n    print(ans)\n    \n# inf.close()\n"", ""#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t):\n    candy = [int(item) for item in input().split()]\n    candy.sort(reverse=True)\n    total = sum(candy)\n    if candy[0] <= candy[1] + candy[2]:\n        print((total - total % 2) // 2)\n    else:\n        print(total - (candy[0] - candy[1] - candy[2]) // 2)"", ""from math import *\nfrom collections import *\nimport sys\nsys.setrecursionlimit(10**9)\n\nt = int(input())\nfor y in range(t):\n\tr,g,b = list(map(int,input().split()))\n\tm = max(r,g,b)\n\tif(r + g + b - m >= m):\n\t\tans = (r+g+b)//2\n\telse:\n\t\tans = r+g+b - m\n\tprint(ans)\n""]","{\n  ""inputs"": [\n    ""6\n1 1 1\n1 2 1\n4 1 1\n7 4 10\n8 1 4\n8 2 8\n""\n  ],\n  ""outputs"": [\n    ""1\n2\n2\n10\n5\n9\n""\n  ]\n}"
https://codeforces.com/problemset/problem/1365/A,"games,greedy,implementation","Ashish and Vivek play a game on a matrix consisting of $n$ rows and $m$ columns, where they take turns claiming cells. Unclaimed cells are represented by $0$, while claimed cells are represented by $1$. The initial state of the matrix is given. There can be some claimed cells in the initial state.\n\nIn each turn, a player must claim a cell. A cell may be claimed if it is unclaimed and does not share a row or column with any other already claimed cells. When a player is unable to make a move, he loses and the game ends.\n\nIf Ashish and Vivek take turns to move and Ashish goes first, determine the winner of the game if both of them are playing optimally.\n\nOptimal play between two players means that both players choose the best possible strategy to achieve the best possible outcome for themselves.\n\n\n-----Input-----\n\nThe first line consists of a single integer $t$ $(1 \le t \le 50)$ — the number of test cases. The description of the test cases follows.\n\nThe first line of each test case consists of two space-separated integers $n$, $m$ $(1 \le n, m \le 50)$ — the number of rows and columns in the matrix.\n\nThe following $n$ lines consist of $m$ integers each, the $j$-th integer on the $i$-th line denoting $a_{i,j}$ $(a_{i,j} \in \{0, 1\})$.\n\n\n-----Output-----\n\nFor each test case if Ashish wins the game print ""Ashish"" otherwise print ""Vivek"" (without quotes).\n\n\n-----Example-----\nInput\n4\n2 2\n0 0\n0 0\n2 2\n0 0\n0 1\n2 3\n1 0 1\n1 1 0\n3 3\n1 0 0\n0 0 0\n1 0 0\n\nOutput\nVivek\nAshish\nVivek\nAshish\n\n\n\n-----Note-----\n\nFor the first case: One possible scenario could be: Ashish claims cell $(1, 1)$, Vivek then claims cell $(2, 2)$. Ashish can neither claim cell $(1, 2)$, nor cell $(2, 1)$ as cells $(1, 1)$ and $(2, 2)$ are already claimed. Thus Ashish loses. It can be shown that no matter what Ashish plays in this case, Vivek will win. \n\nFor the second case: Ashish claims cell $(1, 1)$, the only cell that can be claimed in the first move. After that Vivek has no moves left.\n\nFor the third case: Ashish cannot make a move, so Vivek wins.\n\nFor the fourth case: If Ashish claims cell $(2, 3)$, Vivek will have no moves left.","[""t = int(input())\n\nfor _ in range(t):\n    n, m = [int(x) for x in input().split()]\n    grid = [[int(x) for x in input().split()] for _ in range(n)]\n\n    rows = sum(1 for x in grid if all(y == 0 for y in x))\n    cols = sum(1 for j in range(m) if all(grid[i][j] == 0 for i in range(n)))\n\n    res = min(rows, cols)\n\n    print(\""Ashish\"" if res % 2 else \""Vivek\"")\n"", ""q = int(input())\nfor _ in range(q):\n    r,c = map(int,input().split())\n    mat = [list(map(int,input().split())) for i in range(r)]\n    row = 0\n    for i in mat:\n        if sum(i) == 0:\n            row += 1\n    col = 0\n    for i in range(c):\n        su = 0\n        for j in range(r):\n            su += mat[j][i]\n        if su == 0:\n            col += 1\n    cyk = min(row, col)\n    if cyk%2 == 0:\n        print(\""Vivek\"")\n    else:\n        print(\""Ashish\"")"", ""from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\nfor _ in range(val()):\n    n,m = li()\n    l = []\n    for i in range(n):l.append(li())\n    rows = n\n    cols = m\n    for i in range(n):\n        if sum(l[i]):rows -= 1\n    for j in range(m):\n        for i in range(n):\n            if l[i][j]:\n                cols -= 1\n                break\n    n = rows\n    m = cols\n    print('Ashish' if min(n,m)&1 else 'Vivek')"", ""for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    arr = [list(map(int, input().split())) for _ in range(n)]\n\n    rows = 0\n    for i in range(n):\n        if 1 in arr[i]:\n            rows += 1\n    rows = n-rows\n\n    cols = 0\n    for j in range(m):\n        for i in range(n):\n            if arr[i][j] == 1:\n                cols += 1\n                break\n\n    cols = m-cols\n\n    if min(cols, rows) % 2 == 0:\n        print(\""Vivek\"")\n    else:\n        print(\""Ashish\"")\n"", ""T = int(input())\n\nfor t in range(T):\n    N, M = [int(_) for _ in input().split()]\n    matrix = []\n\n    for i in range(N):\n        row = [int(_) for _ in input().split()]\n        matrix.append(row)\n\n    available_rows = 0\n    for row in matrix:\n        if 1 not in row:\n            available_rows += 1\n    available_cols = 0\n    for i in range(len(matrix[0])):\n        for j in range(len(matrix)):\n            if matrix[j][i] == 1:\n                break\n        else:\n            available_cols += 1\n\n    a = min(available_cols, available_rows)\n    if a & 1:\n        print('Ashish')\n    else:\n        print('Vivek')\n"", ""for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    arr = [[0] * m for i in range(n)]\n    for i in range(n):\n        arr[i] = list(map(int, input().split()))\n    a = 0\n    for i in range(n):\n        if sum(arr[i]) == 0:\n            a += 1\n    b = 0\n    for j in range(m):\n        cnt = 0\n        for i in range(n):\n            cnt += arr[i][j]\n        if cnt == 0:\n            b += 1\n    if min(a, b) % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')\n"", ""from math import *\n\ndef r1(t):\n    return t(input())\n\ndef r2(t):\n    return [t(i) for i in input().split()]\n\ndef r3(t):\n    return [t(i) for i in input()]\n\nfor _ in range(r1(int)):\n    n, m = r2(int)\n    a = []\n    for i in range(n):\n        a.append(r2(int))\n\n    c = 0\n    for i in range(n):\n        if sum(a[i]) > 0:\n            c += 1\n\n    c2 = 0\n    for j in range(m):\n        for i in range(n):\n            if a[i][j] > 0:\n                c2 += 1\n                break\n\n    if min(n - c, m - c2) % 2 == 1:\n        print('Ashish')\n    else:\n        print('Vivek')\n"", ""t=int(input())\nfor q in range(t):\n\tn,m=[int(i) for i in input().split()]\n\ta=[[int(j) for j in input().split()] for i in range(n)]\n\trow=[False for i in range(n)]\n\tcol=[False for i in range(m)]\n\tnr,nc=0,0\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif a[i][j]==1:\n\t\t\t\tif not row[i]:\n\t\t\t\t\trow[i]=True\n\t\t\t\t\tnr+=1\n\t\t\t\tif not col[j]:\n\t\t\t\t\tcol[j]=True\n\t\t\t\t\tnc+=1\n\tt=min(n-nr,m-nc)\n\tres=\""Vivek\"" if t%2==0 else \""Ashish\""\n\tprint(res)\n"", ""t = int(input())\nfor _ in range(t):\n    n,m = [int(i) for i in input().split()]\n    v,h = 0,0\n    grid = []\n    for _ in range(n):\n        line = [int(i) for i in input().split()]\n        if 1 not in line:\n            h += 1\n        grid.append(line)\n    for i in range(m):\n        if 1 not in [j[i] for j in grid]:\n            v += 1\n    M = min(h, v)\n    if M&1:\n        print(\""Ashish\"")\n    else:\n        print(\""Vivek\"")"", ""T = int(input())\n\nfor t in range(T):\n    n, m = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for i in range(n)]\n\n    rows = set()\n    cols = set()\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                rows.add(i)\n                cols.add(j)\n\n    m = min(n - len(rows), m - len(cols))\n    if m % 2 == 0:\n        print(\""Vivek\"")\n    else:\n        print(\""Ashish\"")\n"", ""from sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n\n    l = [[] for _ in range(m)]\n\n    r = c = 0\n\n    for _ in range(n):\n        a = list(map(int, input().split()))\n\n        for i in range(m):\n            l[i].append(a[i])\n\n        if 1 not in a:\n            r += 1\n\n    for a in l:\n        if 1 not in a:\n            c += 1\n\n    if min(r, c) % 2:\n        print('Ashish')\n    else:\n        print('Vivek')"", ""def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, m = read_ints()\n    a = []\n    for i in range(n):\n        a.append(list(read_ints()))\n    row = set([i for i in range(n)])\n    col = set([i for i in range(m)])\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                if i in row:\n                    row.remove(i)\n                if j in col:\n                    col.remove(j)\n    lo = min(len(row), len(col))\n    print(\""Ashish\"" if lo % 2 == 1 else \""Vivek\"")\n"", ""def solve(n, m, grid):\n    n_free_cols = sum(all(grid[i][j] == 0 for i in range(n)) for j in range(m))\n    n_free_lines = sum(all(grid[i][j] == 0 for j in range(m)) for i in range(n))\n    N = min(n_free_lines, n_free_cols)\n    return N % 2 == 1\n\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        n, m = list(map(int, input().split()))\n        grid = [list(map(int, input().split())) for _ in range(n)]\n        print(\""Ashish\"" if solve(n, m, grid) else \""Vivek\"")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"", ""from math import *\nt = int(input())\nfor y in range(t):\n\tn,m = list(map(int,input().split()))\n\ta = []\n\tfor i in range(n):\n\t\ta.append(list(map(int,input().split())))\n\tr,c = 0,0\n\tfor i in range(n):\n\t\tct = 0\n\t\tfor j in range(m):\n\t\t\tif(a[i][j] == 0):\n\t\t\t\tct += 1\n\t\tif(ct == m):\n\t\t\tr += 1\n\tfor i in range(m):\n\t\tct = 0\n\t\tfor j in range(n):\n\t\t\tif(a[j][i] == 0):\n\t\t\t\tct += 1\n\t\tif(ct == n):\n\t\t\tc += 1\n\tx = min(r,c)\n\tif(x&1):\n\t\tprint(\""Ashish\"")\n\telse:\n\t\tprint(\""Vivek\"")\n\n\n\n"", ""from sys import stdin\nT=int(stdin.readline().strip())\nfor caso in range(T):\n    \n    n,m=list(map(int,stdin.readline().strip().split()))\n    s=[list(map(int,stdin.readline().strip().split())) for i in range(n)]\n    r=n\n    for i in range(n):\n        if 1 in s[i]:\n            r-=1\n    c=m\n    for i in range(m):\n        for j in range(n):\n            if s[j][i]==1:\n                c-=1\n                break\n    x=min(c,r)\n    if x%2==0:\n        print(\""Vivek\"")\n    else:\n        print(\""Ashish\"")\n            \n"", ""t = int(input())\n\nfor _ in range(t):\n    n, m = list(map(int, input().strip().split()))\n\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().strip().split())))\n\n    rows = 0\n    for row in matrix:\n        if sum(row) == 0:\n            rows += 1\n\n    cols = 0\n    for i in range(m):\n        s = 0\n        for j in range(n):\n            s += matrix[j][i]\n        if s == 0:\n            cols += 1\n    \n    mini = min(cols, rows)\n\n    if mini % 2 == 1:\n        print(\""Ashish\"")\n    else:\n        print(\""Vivek\"")"", ""for ttt in range(int(input())):\n#\tl = list(map(int, input().split()))\n#\tn = int(input())\n\tn, m = list(map(int, input().split()))\n\tx = [0] * n\n\ty = [0] * m\n\tfor i in range(n):\n\t\tl = list(map(int, input().split()))\n\t\tif 1 in l:\n\t\t\tx[i] = 1\n\t\tfor j in range(m):\n\t\t\tif l[j] == 1:\n\t\t\t\ty[j] = 1\n\tt = min(x.count(0), y.count(0))\n\tprint('Vivek' if t % 2 == 0 else 'Ashish')\n\n"", ""for nt in range(int(input())):\n\tn,m = map(int,input().split())\n\tmat = []\n\tfor i in range(n):\n\t\tmat.append(list(map(int,input().split())))\n\trow = {}\n\tcol = {}\n\tfor i in range(n):\n\t\tif 1 in mat[i]:\n\t\t\trow[i]=1\n\tfor i in range(m):\n\t\tflag = 0\n\t\tfor j in range(n):\n\t\t\tif mat[j][i]==1:\n\t\t\t\tflag = 1\n\t\t\t\tbreak\n\t\tif flag:\n\t\t\tcol[i]=1\n\tcount = 0\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif i not in row and j not in col:\n\t\t\t\trow[i]=1\n\t\t\t\tcol[j]=1\n\t\t\t\tcount+=1\n\tif count%2:\n\t\tprint (\""Ashish\"")\n\telse:\n\t\tprint (\""Vivek\"")"", ""\n\nfor _ in range(int(input())):\n\tn,m=map(int,input().split())\n\n\ta=[]\n\n\tfor i in range(n):\n\t\ta.append(list(map(int,input().split())))\n\n\trow=[0]*n\n\tcol=[0]*m\n\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif(a[i][j]):\n\t\t\t\trow[i]=1;\n\t\t\t\tcol[j]=1;\n\n\trowc=row.count(0)\n\tcolc=col.count(0)\n\n\tmoves=min(rowc,colc)\n\n\tif(moves&1):\n\t\tprint(\""Ashish\"")\n\telse:\n\t\tprint(\""Vivek\"")""]","{\n  ""inputs"": [\n    ""4\n2 2\n0 0\n0 0\n2 2\n0 0\n0 1\n2 3\n1 0 1\n1 1 0\n3 3\n1 0 0\n0 0 0\n1 0 0\n""\n  ],\n  ""outputs"": [\n    ""Vivek\nAshish\nVivek\nAshish\n""\n  ]\n}"
